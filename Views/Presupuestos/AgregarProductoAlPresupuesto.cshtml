@model AgregarProductoAlPresupuestoViewModel
@if(Model.Productos.Count>=1)
{

<section class="d-flex justify-content-center align-items-center" style="height: 70vh;">
    <article class="border rounded p-5">
        <form asp-asp-controller="Presupuestos" asp-action="AgregarProductoAlPresupuesto" method="post">
            <input type="hidden" asp-for="IdPresupuesto" value="@Model.IdPresupuesto">
            <section class="form-group d-flex justify-content-between p-2">
                <label class="form-label">Prodcuto:</label>
                <select asp-for="IdProductoSeleccionado" asp-items="@(new SelectList(Model.Productos, "IdProducto", "Descripcion"))" class="form-control-sm">
                    <option value="">seleccione un producto</option>
                </select>
            </section>
                <span asp-validation-for="IdProductoSeleccionado" class="text-danger"></span>
            <section class="form-group d-flex justify-content-between p-2">
                <label  asp-for="Cantidad" class="form-label">cantidad</label>
                <input asp-for="Cantidad" type="number" class="form-control-sm">
            </section>
            <span asp-validation-for="Cantidad" class="text-danger"></span>
            <section  class="form-group p-2">
                <input type="submit" value="crear" class="btn btn-primary">
                <a class="btn btn-danger " asp-controller="Presupuestos" asp-route-id="@Model.IdPresupuesto" asp-action="VerDetalle" >volver</a>
            </section>
        </form>
@* input envia al controlador los datos de los parametros a traves del name del imput *@
    </article>
</section>
}
else
{  
   <script>
    alert("No hay productos disponibles que se puedan agregar. Aceptar para redirigir")
        setTimeout(function () {
            window.history.back();
        }, 500); @*este codigo redirige a la pagina anterior luego de 2.5 seg*@
    </script>
}
@section Scripts{<partial name="_ValidationScriptsPartial"/>}
@*el @model: 
*Recibe datos: Cuando el controlador renderiza una vista, el modelo contiene los datos que se mostrarán.
*Envía datos: Cuando el formulario se envía al servidor, el modelo puede usarse para mapear los datos enviados.
aca el model recibe el id del presupuesto al que se le va a agregar un nuevo detalle, entonces el formulario envia los datos al action a traves de name (en el input)
(te das cuenta si en el controlador retorna la vista sola o con algo, si va vacia el model en la vista envia los datos, si retorna algo, el model recibe los datos en la vista)*@